# This is a basic workflow to help you get started with Actions
# workflow - —Ü–µ–ø–æ—á–∫–∞ –¥–µ–π—Å—Ç–≤–∏–π
# –ò–º—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –ë–∏–ª–¥–∏—Ç—Å—è –Ω–∞ –≤—Å–µ—Ö —Ç–∏–ø–∞—Ö üì¶ üêç
name: CMake Build Matrix

# Controls when the action will run. Triggers the workflow on push
on: 
  push:
  pull_request:
  release:
    # tags:
    # - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }} # –±—É–¥–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –ø–æ –æ—á–µ—Ä–µ–¥–∏ –Ω–∞ –≤—Å–µ—Ö —Ç–∏–ø–∞—Ö –º–∞—à–∏–Ω
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]
        config: 
        - {
            name: "Ubuntu_Latest_GCC",
            os: ubuntu-latest,
            artifact: "ubuntu_gcc.7z",
            build_type: "Debug",
            cc: "gcc",
            cxx: "g++",
            archiver: "7z a",
            generators: "Ninja"
          }
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Print env
        run: |
          echo github.event.action: ${{ github.event.action }}
          echo github.event_name: ${{ github.event_name }}
          echo login usera: ${{github.actor}}
      - name: Install dependencies on windows
        if: startsWith(matrix.config.os, 'windows')
        run: |
          choco install ninja cmake
          ninja --version
          cmake --version
        # cmd "${{ matrix.config.environment_script }}"

      - name: Install dependencies on ubuntu
        if: startsWith(matrix.config.name, 'Ubuntu_Latest_GCC')
        run: |
          sudo apt-get update
          sudo apt-get install ninja-build cmake
          ninja --version
          cmake --version
          gcc --version
      - name: Install dependencies on ubuntu9
        if: startsWith(matrix.config.name, 'Ubuntu_GCC_9')
        run: |
          echo Update gcc-9 =======================================================================
          echo gcc version before
          gcc --version
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test
          sudo apt-get update
          sudo apt-get install ninja-build cmake gcc-9 g++-9
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 90 --slave /usr/bin/g++ g++ /usr/bin/g++-9 --slave /usr/bin/gcov gcov /usr/bin/gcov-9
          echo gcc version after
          gcc --version
          echo Update ninja =======================================================================
          echo ninja version before
          ninja --version
          # wget https://github.com/ninja-build/ninja/releases/download/v1.10.0/ninja-linux.zip
          wget https://github.com/ninja-build/ninja/releases/latest/download/ninja-linux.zip
          sudo unzip ninja-linux.zip -d /usr/local/bin/
          sudo update-alternatives --install /usr/bin/ninja ninja /usr/local/bin/ninja 1 --force
          echo ninja version after
          ninja --version
          echo Update cmake =======================================================================
          echo cmake version before
          cmake --version
          # curl --silent "https://api.github.com/repos/Kitware/CMake/releases/latest" | sed -n 's/.*tag_name":\s"\(.*\)".*/\1/p' | head -2
          # wget https://github.com/Kitware/CMake/releases/latest/download/cmake-3.16.5-Linux-x86_64.sh
          cmake_version=$(curl --silent "https://api.github.com/repos/Kitware/CMake/releases/latest" | sed -n 's/.*tag_name":\s"\(.*\)".*/\1/p' | head -2 | cut -c 2-)
          echo cmake download latest v$cmake_version version
          wget https://github.com/Kitware/CMake/releases/download/v$cmake_version/cmake-$cmake_version-Linux-x86_64.sh
          chmod +x cmake-$cmake_version-Linux-x86_64.sh
          sudo mkdir /opt/cmake
          sudo ./cmake-$cmake_version-Linux-x86_64.sh --prefix=/opt/cmake --skip-license
          sudo update-alternatives --install /usr/bin/cmake cmake /opt/cmake/bin/cmake 1 --force
          echo cmake version after
          cmake --version

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install gspread
        shell: bash
        run: pip install gspread

        
      - name: Configure
        shell: bash
        working-directory: /home/runner/work/BEST_3823B1FI3/BEST_3823B1FI3
        run: |
          mkdir build
          mkdir instdir
          cmake --no-warn-unused-cli -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }} -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=TRUE -B ./build -G Ninja
          
      - name: Build
        shell: bash
        working-directory: /home/runner/work/BEST_3823B1FI3/BEST_3823B1FI3
        run: cmake --build ./build --config ${{ matrix.config.build_type }}

      - name: See build 2
        if: always()
        shell: bash
        working-directory: /home/runner/work/BEST_3823B1FI3/BEST_3823B1FI3
        run: ls

      - name: Very hard setting load json
        shell: bash
        working-directory: /home/runner/work/BEST_3823B1FI3/BEST_3823B1FI3
        run: |
          pip install pandas
          pip install gdown
          gdown 1L6dRqWVmXx5V16C0sQXFQUK43PBfJ4hX

      - name: Load magscr, tstscr, mag
        shell: bash
        working-directory: /home/runner/work/BEST_3823B1FI3/BEST_3823B1FI3
        run: |
          gdown 1VLNuCVgDOw6PMqHMIsBl5xoYjYmPbCEK
          gdown 1qFuKKr6acDVp3JMEy1VaIqIgsfpAA2xD
          gdown 129gQ_wu82M4eud8mgmp8_C4jwA5TqRKa
          ls

      - name: 0-Begin_Task
        shell: bash
        working-directory: /home/runner/work/BEST_3823B1FI3/BEST_3823B1FI3
        run: |
          ./build/sum
          python3 fill_magazine.py -t "0-Begin_Task" -r "$(echo $?)"

      - name: 1-type seconds
        if: always()
        shell: bash
        working-directory: /home/runner/work/BEST_3823B1FI3/BEST_3823B1FI3
        run: |
          ./build/1-type/seconds
          python3 fill_magazine.py -t "seconds" -r "$(echo $?)"

      - name: 1-type clock
        if: always()
        shell: bash
        working-directory: /home/runner/work/BEST_3823B1FI3/BEST_3823B1FI3
        run: |
          ./build/1-type/clock
          python3 fill_magazine.py -t "clock" -r "$(echo $?)"

      - name: 1-type module
        if: always()
        shell: bash
        working-directory: /home/runner/work/BEST_3823B1FI3/BEST_3823B1FI3
        run: |
          ./build/1-type/module
          python3 fill_magazine.py -t "module" -r "$(echo $?)"

      - name: 1-type decomposition
        if: always()
        shell: bash
        working-directory: /home/runner/work/BEST_3823B1FI3/BEST_3823B1FI3
        run: |
          ./build/1-type/decomposition
          python3 fill_magazine.py -t "decomposition" -r "$(echo $?)"
          
      - name: 1-type point
        if: always()
        shell: bash
        working-directory: /home/runner/work/BEST_3823B1FI3/BEST_3823B1FI3
        run: |
          ./build/1-type/point
          python3 fill_magazine.py -t "point" -r "$(echo $?)"

      - name: 1-type char-category
        if: always()
        shell: bash
        working-directory: /home/runner/work/BEST_3823B1FI3/BEST_3823B1FI3
        run: |
          ./build/1-type/char-category
          python3 fill_magazine.py -t "char-category" -r "$(echo $?)"
          
      - name: 1-type double
        if: always()
        shell: bash
        working-directory: /home/runner/work/BEST_3823B1FI3/BEST_3823B1FI3
        run: |
          ./build/1-type/double
          python3 fill_magazine.py -t "double" -r "$(echo $?)"
          
      - name: 1-type byte
        if: always()
        shell: bash
        working-directory: /home/runner/work/BEST_3823B1FI3/BEST_3823B1FI3
        run: |
          ./build/1-type/byte
          python3 fill_magazine.py -t "byte" -r "$(echo $?)"

      - name: 1-type deadline
        if: always()
        shell: bash
        working-directory: /home/runner/work/BEST_3823B1FI3/BEST_3823B1FI3
        run: |
          ./build/1-type/deadline
          python3 fill_magazine.py -t "deadline" -r "$(echo $?)"


      - name: 2-if_else_switch Change
        if: always()
        shell: bash
        working-directory: /home/runner/work/BEST_3823B1FI3/BEST_3823B1FI3
        run: |
          ./build/2-if_else_switch/change
          python3 fill_magazine.py -t "change" -r "$(echo $?)"
          
      - name: 2-if_else_switch leapyear
        if: always()
        shell: bash
        working-directory: /home/runner/work/BEST_3823B1FI3/BEST_3823B1FI3
        run: |
          ./build/2-if_else_switch/leapyear
          python3 fill_magazine.py -t "leapyear" -r "$(echo $?)"

      - name: 2-if_else_switch chocolate
        if: always()
        shell: bash
        working-directory: /home/runner/work/BEST_3823B1FI3/BEST_3823B1FI3
        run: |
          ./build/2-if_else_switch/chocolate
          python3 fill_magazine.py -t "chocolate" -r "$(echo $?)"

      - name: 2-if_else_switch icecream
        if: always()
        shell: bash
        working-directory: /home/runner/work/BEST_3823B1FI3/BEST_3823B1FI3
        run: |
          ./build/2-if_else_switch/icecream
          python3 fill_magazine.py -t "icecream" -r "$(echo $?)"

      - name: 2-if_else_switch QuadraticEquation
        if: always()
        shell: bash
        working-directory: /home/runner/work/BEST_3823B1FI3/BEST_3823B1FI3
        run: |
          ./build/2-if_else_switch/QuadraticEquation
          python3 fill_magazine.py -t "QuadraticEquation" -r "$(echo $?)"

      - name: 2-if_else_switch monthday
        if: always()
        shell: bash
        working-directory: /home/runner/work/BEST_3823B1FI3/BEST_3823B1FI3
        run: |
          ./build/2-if_else_switch/monthday
          python3 fill_magazine.py -t "monthday" -r "$(echo $?)"

      - name: 2-if_else_switch chess
        if: always()
        shell: bash
        working-directory: /home/runner/work/BEST_3823B1FI3/BEST_3823B1FI3
        run: |
          ./build/2-if_else_switch/chess
          python3 fill_magazine.py -t "chess" -r "$(echo $?)"

      - name: 2-if_else_switch twoboxes
        if: always()
        shell: bash
        working-directory: /home/runner/work/BEST_3823B1FI3/BEST_3823B1FI3
        run: |
          ./build/2-if_else_switch/twoboxes
          python3 fill_magazine.py -t "twoboxes" -r "$(echo $?)"
          
      - name: 3-loop bin_patterns
        if: always()
        shell: bash
        working-directory: /home/runner/work/BEST_3823B1FI3/BEST_3823B1FI3
        run: |
          ./build/3-loop/bin_patterns
          python3 fill_magazine.py -t "bin_patterns" -r "$(echo $?)"
          
      - name: 3-loop calc_e
        if: always()
        shell: bash
        working-directory: /home/runner/work/BEST_3823B1FI3/BEST_3823B1FI3
        run: |
          ./build/3-loop/calc_e
          python3 fill_magazine.py -t "calc_e" -r "$(echo $?)"

      - name: 3-loop count_max_digit
        if: always()
        shell: bash
        working-directory: /home/runner/work/BEST_3823B1FI3/BEST_3823B1FI3
        run: |
          ./build/3-loop/count_max_digit
          python3 fill_magazine.py -t "count_max_digit" -r "$(echo $?)"

      - name: 3-loop fibonacci
        if: always()
        shell: bash
        working-directory: /home/runner/work/BEST_3823B1FI3/BEST_3823B1FI3
        run: |
          ./build/3-loop/fibonacci
          python3 fill_magazine.py -t "fibonacci" -r "$(echo $?)"

      - name: 3-loop find_digit
        if: always()
        shell: bash
        working-directory: /home/runner/work/BEST_3823B1FI3/BEST_3823B1FI3
        run: |
          ./build/3-loop/find_digit
          python3 fill_magazine.py -t "find_digit" -r "$(echo $?)"
          
      - name: 3-loop find_elem
        if: always()
        shell: bash
        working-directory: /home/runner/work/BEST_3823B1FI3/BEST_3823B1FI3
        run: |
          ./build/3-loop/find_elem
          python3 fill_magazine.py -t "find_elem" -r "$(echo $?)"

      - name: 3-loop integral
        if: always()
        shell: bash
        working-directory: /home/runner/work/BEST_3823B1FI3/BEST_3823B1FI3
        run: |
          ./build/3-loop/integral
          python3 fill_magazine.py -t "integral" -r "$(echo $?)"
          
      - name: 3-loop limit
        if: always()
        shell: bash
        working-directory: /home/runner/work/BEST_3823B1FI3/BEST_3823B1FI3
        run: |
          ./build/3-loop/limit
          python3 fill_magazine.py -t "limit" -r "$(echo $?)"
          
      - name: 3-loop numinvers
        if: always()
        shell: bash
        working-directory: /home/runner/work/BEST_3823B1FI3/BEST_3823B1FI3
        run: |
          ./build/3-loop/numinvers
          python3 fill_magazine.py -t "numinvers" -r "$(echo $?)"

      - name: 3-loop row
        if: always()
        shell: bash
        working-directory: /home/runner/work/BEST_3823B1FI3/BEST_3823B1FI3
        run: |
          ./build/3-loop/row
          python3 fill_magazine.py -t "row" -r "$(echo $?)"

      - name: 4-array det
        if: always()
        shell: bash
        working-directory: /home/runner/work/BEST_3823B1FI3/BEST_3823B1FI3
        run: |
          ./build/4-array/det
          python3 fill_magazine.py -t "det" -r "$(echo $?)"
          
      - name: 4-array find_hole
        if: always()
        shell: bash
        working-directory: /home/runner/work/BEST_3823B1FI3/BEST_3823B1FI3
        run: |
          ./build/4-array/find_hole
          python3 fill_magazine.py -t "find_hole" -r "$(echo $?)"

      - name: 4-array get_percent
        if: always()
        shell: bash
        working-directory: /home/runner/work/BEST_3823B1FI3/BEST_3823B1FI3
        run: |
          ./build/4-array/get_percent
          python3 fill_magazine.py -t "get_percent" -r "$(echo $?)"   

      - name: 4-array kernel
        if: always()
        shell: bash
        working-directory: /home/runner/work/BEST_3823B1FI3/BEST_3823B1FI3
        run: |
          ./build/4-array/kernel
          python3 fill_magazine.py -t "kernel" -r "$(echo $?)"

      - name: 4-array little_big_converter
        if: always()
        shell: bash
        working-directory: /home/runner/work/BEST_3823B1FI3/BEST_3823B1FI3
        run: |
          ./build/4-array/little_big_converter
          python3 fill_magazine.py -t "little_big_converter" -r "$(echo $?)"
          
      - name: 4-array max_local_min
        if: always()
        shell: bash
        working-directory: /home/runner/work/BEST_3823B1FI3/BEST_3823B1FI3
        run: |
          ./build/4-array/max_local_min
          python3 fill_magazine.py -t "max_local_min" -r "$(echo $?)"          
          
      - name: 4-array more_on_left
        if: always()
        shell: bash
        working-directory: /home/runner/work/BEST_3823B1FI3/BEST_3823B1FI3
        run: |
          ./build/4-array/more_on_left
          python3 fill_magazine.py -t "more_on_left" -r "$(echo $?)"          
          
      - name: 4-array robot
        if: always()
        shell: bash
        working-directory: /home/runner/work/BEST_3823B1FI3/BEST_3823B1FI3
        run: |
          ./build/4-array/robot
          python3 fill_magazine.py -t "robot" -r "$(echo $?)"             
        
      - name: 5-pointer even
        if: always()
        shell: bash
        working-directory: /home/runner/work/BEST_3823B1FI3/BEST_3823B1FI3
        run: |
          ./build/5-pointer/even
          python3 fill_magazine.py -t "even" -r "$(echo $?)"      

      - name: 5-pointer matrix_multy
        if: always()
        shell: bash
        working-directory: /home/runner/work/BEST_3823B1FI3/BEST_3823B1FI3
        run: |
          ./build/5-pointer/matrix_multy
          python3 fill_magazine.py -t "matrix_multy" -r "$(echo $?)"            
          
      - name: 5-pointer packaging
        if: always()
        shell: bash
        working-directory: /home/runner/work/BEST_3823B1FI3/BEST_3823B1FI3
        run: |
          ./build/5-pointer/packaging
          python3 fill_magazine.py -t "packaging" -r "$(echo $?)"  

          
      - name: Estimate
        if: always()
        shell: bash
        working-directory: /home/runner/work/BEST_3823B1FI3/BEST_3823B1FI3
        run: python3 testscript.py -p ${{github.actor}}

      - name: Upload release asset
        if: github.event_name == 'release' && (github.event.action == 'published' || github.event.action == 'created')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./${{ matrix.config.artifact }}
          asset_name: ${{ matrix.config.artifact }}.zip
          asset_content_type: application/zip
